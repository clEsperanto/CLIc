# Simple workflow for deploying static content to GitHub Pages
name: Deploy Pages
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.11

      - name: Get specific version of CMake, Ninja
        uses: lukka/get-cmake@v3.29.1    

      - name: Install doxygen
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen
        shell: bash -l {0}

      - name: Install build sphinx
        run: |
          python -m pip install --upgrade pip
          python -m pip install ninja sphinx sphinx_rtd_theme breathe
        shell: bash -l {0}    

      - name: generat build folder
        run: |
          cmake -S ./docs -B ./build -G Ninja
          cmake --build ./build --target documentation
        shell: bash -l {0} 

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './docs/build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
